// helper

is-number(input)
  if type(input) == 'unit'
    if unit(input) == ''
      return true

  return false

base-calc(span)
  if is-number(span)
    return basesize * span

  return span

base-clip(span, clip)
  if is-number(span)
    return base-calc(span) - clip

  return span

base-font(span)
  if is-number(span)
    return basefont * span

  return span

// font

font-size(span)
  font-size base-font(span)

line-height(span)
  line-height base-calc(span)

text-indent(span)
  text-indent base-calc(span)

font-line(font, line = font)
  font-size font
  line-height line

// position
// TODO: fix, currently breaks gradient (top(top)...)

/*top(top)*/
  /*top base-calc(top)*/

/*right(right)*/
  /*right base-calc(right)*/

/*bottom(bottom)*/
  /*bottom base-calc(bottom)*/

/*left(left)*/
  /*left base-calc(left)*/

// size

size (width, height = width)
  width base-calc(width)
  height base-calc(height)

// width

width(width)
  width base-calc(width)

max-width(width)
  max-width base-calc(width)

min-width(width)
  min-width base-calc(width)

// height

height(height)
  height base-calc(height)

max-height(height)
  max-height base-calc(height)

min-height(height)
  min-height base-calc(height)

// margin

margin-top(top)
  margin-top base-calc(top)

margin-right(right)
  margin-right base-calc(right)

margin-bottom(bottom)
  margin-bottom base-calc(bottom)

margin-left(left)
  margin-left base-calc(left)

margin-height()
  margin-top arguments[0]
  margin-bottom arguments[1] || arguments[0]

margin-width()
  margin-right arguments[0]
  margin-left arguments[1] || arguments[0]

margin()
  if length(arguments) >= 4
    margin-right arguments[1]
    margin-left arguments[3]
  else if length(arguments) >= 2
    margin-width arguments[1]
  else if length(arguments) >= 1
    margin-width arguments[0]

  if length(arguments) >= 3
    margin-top arguments[0]
    margin-bottom arguments[2]
  else if length(arguments) >= 1
    margin-height arguments[0]


// padding

padding-top(top)
  padding-top base-calc(top)

padding-right(right)
  padding-right base-calc(right)

padding-bottom(bottom)
  padding-bottom base-calc(bottom)

padding-left(left)
  padding-left base-calc(left)

padding-height(top, bottom = null)
  padding-top arguments[0]
  padding-bottom arguments[1] || arguments[0]

padding-width(right, left = null)
  padding-right arguments[0]
  padding-left arguments[1] || arguments[0]

padding()
  if length(arguments) >= 4
    padding-right arguments[1]
    padding-left arguments[3]
  else if length(arguments) >= 2
    padding-width arguments[1]
  else if length(arguments) >= 1
    padding-width arguments[0]

  if length(arguments) >= 3
    padding-top arguments[0]
    padding-bottom arguments[2]
  else if length(arguments) >= 1
    padding-height arguments[0]


// border-margin

border-margin-top(top, border...)
  margin-top base-clip(top, border[0])

  if border[2]
    border-top border[0] border[1] border[2]
  else
    border-top-width border[0]

border-margin-right(right, border...)
  margin-right base-clip(right, border[0])

  if border[2]
    border-right border[0] border[1] border[2]
  else
    border-right-width border[0]

border-margin-bottom(bottom, border...)
  margin-bottom base-clip(bottom, border[0])

  if border[2]
    border-bottom border[0] border[1] border[2]
  else
    border-bottom-width border[0]

border-margin-left(left, border...)
  margin-left base-clip(left, border[0])

  if border[2]
    border-left border[0] border[1] border[2]
  else
    border-left-width border[0]

border-margin-height()
  if length(arguments) >= 5
    border-margin-top arguments[0], arguments[2], arguments[3], arguments[4]
    border-margin-bottom arguments[1], arguments[2], arguments[3], arguments[4]
  else if length(arguments) >= 4
    border-margin-top arguments[0], arguments[1], arguments[2], arguments[3]
    border-margin-bottom arguments[0], arguments[1], arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-margin-top arguments[0], arguments[2]
    border-margin-bottom arguments[1], arguments[2]
  else
    border-margin-top arguments[0], arguments[1]
    border-margin-bottom arguments[0], arguments[1]

border-margin-width()
  if length(arguments) >= 5
    border-margin-right arguments[0], arguments[2], arguments[3], arguments[4]
    border-margin-left arguments[1], arguments[2], arguments[3], arguments[4]
  else if length(arguments) >= 4
    border-margin-right arguments[0], arguments[1], arguments[2], arguments[3]
    border-margin-left arguments[0], arguments[1], arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-margin-right arguments[0], arguments[2]
    border-margin-left arguments[1], arguments[2]
  else
    border-margin-right arguments[0], arguments[1]
    border-margin-left arguments[0], arguments[1]

border-margin()
  if length(arguments) >= 7
    border-margin-top arguments[0], arguments[4], arguments[5], arguments[6]
    border-margin-right arguments[1], arguments[4], arguments[5], arguments[6]
    border-margin-bottom arguments[2], arguments[4], arguments[5], arguments[6]
    border-margin-left arguments[3], arguments[4], arguments[5], arguments[6]
  else if length(arguments) >= 6
    border-margin-top arguments[0], arguments[3], arguments[4], arguments[5]
    border-margin-width arguments[1], arguments[3], arguments[4], arguments[5]
    border-margin-bottom arguments[2], arguments[3], arguments[4], arguments[5]
  else if length(arguments) >= 5
    if unit(argument[3]) == 'string'
      border-margin-height arguments[0], arguments[2], arguments[3], arguments[4]
      border-margin-width arguments[1], arguments[2], arguments[3], arguments[4]
    else
      border-margin-top arguments[0], arguments[4]
      border-margin-right arguments[1], arguments[4]
      border-margin-bottom arguments[2], arguments[4]
      border-margin-left arguments[3], arguments[4]
  else if length(arguments) >= 4
    if unit(arguments[2]) == 'string'
      border-margin-height arguments[0], arguments[1], arguments[2], arguments[3]
      border-margin-width arguments[0], arguments[1], arguments[2], arguments[3]
    else
      border-margin-top arguments[0], arguments[3]
      border-margin-width arguments[1], arguments[3]
      border-margin-bottom arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-margin-height arguments[0], arguments[2]
    border-margin-width arguments[1], arguments[2]
  else if length(arguments) >= 2
    border-margin-height arguments[0], arguments[1]
    border-margin-width arguments[0], arguments[1]

// border-padding

border-padding-top(top, border...)
  padding-top base-clip(top, border[0])

  if border[2]
    border-top border[0] border[1] border[2]
  else
    border-top-width border[0]

border-padding-right(right, border...)
  padding-right base-clip(right, border[0])

  if border[2]
    border-right border[0] border[1] border[2]
  else
    border-right-width border[0]

border-padding-bottom(bottom, border...)
  padding-bottom base-clip(bottom, border[0])

  if border[2]
    border-bottom border[0] border[1] border[2]
  else
    border-bottom-width border[0]

border-padding-left(left, border...)
  padding-left base-clip(left, border[0])

  if border[2]
    border-left border[0] border[1] border[2]
  else
    border-left-width border[0]

border-padding-height()
  if length(arguments) >= 5
    border-padding-top arguments[0], arguments[2], arguments[3], arguments[4]
    border-padding-bottom arguments[1], arguments[2], arguments[3], arguments[4]
  else if length(arguments) >= 4
    border-padding-top arguments[0], arguments[1], arguments[2], arguments[3]
    border-padding-bottom arguments[0], arguments[1], arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-padding-top arguments[0], arguments[2]
    border-padding-bottom arguments[1], arguments[2]
  else
    border-padding-top arguments[0], arguments[1]
    border-padding-bottom arguments[0], arguments[1]

border-padding-width()
  if length(arguments) >= 5
    border-padding-right arguments[0], arguments[2], arguments[3], arguments[4]
    border-padding-left arguments[1], arguments[2], arguments[3], arguments[4]
  else if length(arguments) >= 4
    border-padding-right arguments[0], arguments[1], arguments[2], arguments[3]
    border-padding-left arguments[0], arguments[1], arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-padding-right arguments[0], arguments[2]
    border-padding-left arguments[1], arguments[2]
  else
    border-padding-right arguments[0], arguments[1]
    border-padding-left arguments[0], arguments[1]

border-padding()
  if length(arguments) >= 7
    border-padding-top arguments[0], arguments[4], arguments[5], arguments[6]
    border-padding-right arguments[1], arguments[4], arguments[5], arguments[6]
    border-padding-bottom arguments[2], arguments[4], arguments[5], arguments[6]
    border-padding-left arguments[3], arguments[4], arguments[5], arguments[6]
  else if length(arguments) >= 6
    border-padding-top arguments[0], arguments[3], arguments[4], arguments[5]
    border-padding-width arguments[1], arguments[3], arguments[4], arguments[5]
    border-padding-bottom arguments[2], arguments[3], arguments[4], arguments[5]
  else if length(arguments) >= 5
    if unit(argument[3]) == 'string'
      border-padding-height arguments[0], arguments[2], arguments[3], arguments[4]
      border-padding-width arguments[1], arguments[2], arguments[3], arguments[4]
    else
      border-padding-top arguments[0], arguments[4]
      border-padding-right arguments[1], arguments[4]
      border-padding-bottom arguments[2], arguments[4]
      border-padding-left arguments[3], arguments[4]
  else if length(arguments) >= 4
    if unit(arguments[2]) == 'string'
      border-padding-height arguments[0], arguments[1], arguments[2], arguments[3]
      border-padding-width arguments[0], arguments[1], arguments[2], arguments[3]
    else
      border-padding-top arguments[0], arguments[3]
      border-padding-width arguments[1], arguments[3]
      border-padding-bottom arguments[2], arguments[3]
  else if length(arguments) >= 3
    border-padding-height arguments[0], arguments[2]
    border-padding-width arguments[1], arguments[2]
  else if length(arguments) >= 2
    border-padding-height arguments[0], arguments[1]
    border-padding-width arguments[0], arguments[1]